/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.FlywaySchemaHistory;
import generated.tables.Invoices;
import generated.tables.InvoicesPositions;
import generated.tables.Organizations;
import generated.tables.Positions;
import generated.tables.Products;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.InvoicesPositionsRecord;
import generated.tables.records.InvoicesRecord;
import generated.tables.records.OrganizationsRecord;
import generated.tables.records.PositionsRecord;
import generated.tables.records.ProductsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoicesRecord> INVOICES_NUM_KEY = Internal.createUniqueKey(Invoices.INVOICES, DSL.name("invoices_num_key"), new TableField[] { Invoices.INVOICES.NUM }, true);
    public static final UniqueKey<InvoicesRecord> INVOICES_PK = Internal.createUniqueKey(Invoices.INVOICES, DSL.name("invoices_pk"), new TableField[] { Invoices.INVOICES.ID }, true);
    public static final UniqueKey<InvoicesPositionsRecord> INVOICES_POSITIONS_PK = Internal.createUniqueKey(InvoicesPositions.INVOICES_POSITIONS, DSL.name("invoices_positions_pk"), new TableField[] { InvoicesPositions.INVOICES_POSITIONS.ID }, true);
    public static final UniqueKey<OrganizationsRecord> ORGANIZATION_PK = Internal.createUniqueKey(Organizations.ORGANIZATIONS, DSL.name("organization_pk"), new TableField[] { Organizations.ORGANIZATIONS.ID }, true);
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_INN_KEY = Internal.createUniqueKey(Organizations.ORGANIZATIONS, DSL.name("organizations_inn_key"), new TableField[] { Organizations.ORGANIZATIONS.INN }, true);
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PAYMENT_ACCOUNT_KEY = Internal.createUniqueKey(Organizations.ORGANIZATIONS, DSL.name("organizations_payment_account_key"), new TableField[] { Organizations.ORGANIZATIONS.PAYMENT_ACCOUNT }, true);
    public static final UniqueKey<PositionsRecord> POSITION_PK = Internal.createUniqueKey(Positions.POSITIONS, DSL.name("position_pk"), new TableField[] { Positions.POSITIONS.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCT_PK = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("product_pk"), new TableField[] { Products.PRODUCTS.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_INTERNAL_CODE_KEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_internal_code_key"), new TableField[] { Products.PRODUCTS.INTERNAL_CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoicesRecord, OrganizationsRecord> INVOICES__INVOICES_ORGANIZATION_ID_FKEY = Internal.createForeignKey(Invoices.INVOICES, DSL.name("invoices_organization_id_fkey"), new TableField[] { Invoices.INVOICES.ORGANIZATION_ID }, Keys.ORGANIZATION_PK, new TableField[] { Organizations.ORGANIZATIONS.ID }, true);
    public static final ForeignKey<InvoicesPositionsRecord, InvoicesRecord> INVOICES_POSITIONS__INVOICES_POSITIONS_INVOICE_ID_FKEY = Internal.createForeignKey(InvoicesPositions.INVOICES_POSITIONS, DSL.name("invoices_positions_invoice_id_fkey"), new TableField[] { InvoicesPositions.INVOICES_POSITIONS.INVOICE_ID }, Keys.INVOICES_PK, new TableField[] { Invoices.INVOICES.ID }, true);
    public static final ForeignKey<InvoicesPositionsRecord, PositionsRecord> INVOICES_POSITIONS__INVOICES_POSITIONS_POSITION_ID_FKEY = Internal.createForeignKey(InvoicesPositions.INVOICES_POSITIONS, DSL.name("invoices_positions_position_id_fkey"), new TableField[] { InvoicesPositions.INVOICES_POSITIONS.POSITION_ID }, Keys.POSITION_PK, new TableField[] { Positions.POSITIONS.ID }, true);
    public static final ForeignKey<PositionsRecord, ProductsRecord> POSITIONS__POSITIONS_PRODUCT_ID_FKEY = Internal.createForeignKey(Positions.POSITIONS, DSL.name("positions_product_id_fkey"), new TableField[] { Positions.POSITIONS.PRODUCT_ID }, Keys.PRODUCT_PK, new TableField[] { Products.PRODUCTS.ID }, true);
}
